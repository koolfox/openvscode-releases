name: Gitpod Nightly
on:
  workflow_run:
    workflows: ["Nightly"]
    types: [completed]

jobs:
  sync-gp-code:
    name: Syncing gp-code/main branch
    runs-on: ubuntu-latest
    # timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          repository: "gitpod-io/openvscode-server"
          ref: "gp-code/main"
          fetch-depth: 0
          token: ${{ secrets.VSCODE_GITHUB_TOKEN }}

      - name: Configure git credentials
        run: |
          git config user.name Jean Pierre
          git config user.email jeanpierre@gitpod.io

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbfile-dev pkg-config libsecret-1-dev libxss1 dbus xvfb libgtk-3-0 libgbm1
          sudo cp build/azure-pipelines/linux/xvfb.init /etc/init.d/xvfb
          sudo chmod +x /etc/init.d/xvfb
          sudo update-rc.d xvfb defaults
          sudo service xvfb start

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Sync with next (rebase)
        run: |
          ./scripts/sync-with-upstream.sh origin/main gp-code/main "gitpod server initial commit" true

      - name: Compute node modules cache key
        id: nodeModulesCacheKey
        run: echo "::set-output name=value::$(node build/azure-pipelines/common/computeNodeModulesCacheKey.js)"
      - name: Cache node modules
        id: cacheNodeModules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-cacheNodeModules14-${{ steps.nodeModulesCacheKey.outputs.value }}
          restore-keys: ${{ runner.os }}-cacheNodeModules14-
      - name: Get yarn cache directory path
        id: yarnCacheDirPath
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn directory
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarnCacheDirPath.outputs.dir }}
          key: ${{ runner.os }}-yarnCacheDir-${{ steps.nodeModulesCacheKey.outputs.value }}
          restore-keys: ${{ runner.os }}-yarnCacheDir-
      - name: Execute yarn
        if: ${{ steps.cacheNodeModules.outputs.cache-hit != 'true' }}
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
        run: yarn --frozen-lockfile --network-timeout 180000

      - name: Compile
        run: |
          yarn npm-run-all --max_old_space_size=4095 -lp compile playwright-install download-builtin-extensions

      - name: Push changes to gp-code/main branch
        run: |
          git push origin gp-code/main --force-with-lease

      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
